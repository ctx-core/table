import { Readable } from 'svelte/store';
import { Writable } from '@ctx-core/store';
import { maybe } from '@ctx-core/function';
export declare function b__table<I = unknown>(ctx?: unknown): table_type<I>;
export declare const __table: table_type<unknown>;
export declare type $table_type<I = unknown> = I[][];
export declare type table_type<I = unknown> = Writable<$table_type<I>>;
export declare const b__columns: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => columns_type;
export declare type $columns_type = unknown[];
export declare type columns_type = Readable<$columns_type>;
export declare const __columns: columns_type;
export declare const b__columns__data: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Readable<$columns_type>;
export declare const __columns__data: Readable<$columns_type>;
export declare const b__offsets__column: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Readable<Record<string, number>>;
export declare const __offsets__column: Readable<Record<string, number>>;
export declare const b__domain__table: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Writable<number[][]>;
export declare const __domain__table: Writable<number[][]>;
export declare const b__domain__ticks: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Writable<number[]>;
export declare const __domain__ticks: Writable<number[]>;
export declare const b__rows: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Readable<unknown>;
export declare const __rows: Readable<unknown>;
export declare const b__rows__data: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => data_rows_type<unknown>;
export declare type $data_rows_type<I = unknown> = maybe<I[]>;
export declare type data_rows_type<I = unknown> = Readable<$data_rows_type<I>>;
export declare const __rows__data: data_rows_type<unknown>;
export declare const b__reverse__columns: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Readable<unknown[]>;
export declare const __reverse__columns: Readable<unknown[]>;
export declare const b__rank__table: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Readable<unknown>;
export declare const __rank__table: Readable<unknown>;
export declare const b__row_id: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Writable<any>;
export declare const __row_id: Writable<any>;
export declare const b__inputs__filter__rows__data: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Writable<any>;
export declare const __inputs__filter__rows__data: Writable<any>;
export declare function b__filter__rows__data<I = unknown>(ctx?: unknown): data_rows_type<I>;
export declare const __filter__rows__data: data_rows_type<unknown>;
export declare const b__table__filter__rows__data: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Readable<Record<string, unknown>>;
export declare const __table__filter__rows__data: Readable<Record<string, unknown>>;
export declare const b__highlight__rows__data: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Writable<any>;
export declare const b__table__highlight__rows__data: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Writable<any>;
export declare const b__assign__highlight__rows: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => () => void;
export declare const assign__highlight__rows: () => void;
export declare const b__row: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => Writable<any>;
export declare const __row: Writable<any>;
export declare const b__set__row: (ctx?: unknown, opts?: import("@ctx-core/object")._be_opts_type) => () => void;
export declare const set__row: () => void;
